<resources>
    <string name="app_name">app样例</string>
    <string name="module1_name">家庭相册</string>
    <string name="module1_descripton">显示浏览家庭成员相片</string>
    <string name="module2_name">个人影院</string>
    <string name="module2_descripton">可在线观看多部电影</string>
    <string name="module3_name">常用控件</string>
    <string name="module3_descripton">常用控件的效果展示</string>
    <string name="module4_name">网络数据请求并展示</string>
    <string name="module4_descripton">主流的请求网络示例显示通用列表和瀑布流列表</string>
    <string name="module5_name">收集和展示本机应用列表</string>
    <string name="module5_descripton">采用列表方式，收集和展示当前设备已安装的系统应用和用户应用</string>
    <string name="module6_name">地图应用</string>
    <string name="module6_descripton">展示地图基本用法</string>

    <string name="expandabletextview_content">映射对象到变量中
映射对象的每一个属性到一个变量中，这个过程就是我们知道的多声明。
\n 这就是为 什么会有componentX函数被自动创建。\n使用上面的Forecast类举个例子：
\n val	f1 = Forecast(Date(),27.5f,	aString)
\n val (date,	temperature,	details) = f1
\n 上面这个多声明会被编译成下面的代码：
\n val	date = f1.component1()
\n val	temperature	=f1.component2()
\n val	details	= f1.component3()
\n 这个特性背后的逻辑是非常强大的，它可以在很多情况下帮助我们简化代码。
举个 例子，	Map	类含有一些扩展函数的实现，允许它在迭代时使用key和value：
\n for	((key,	value)	in	map)	{
  \n Log.d(map,	key:$key,	value:$value)
    \n }   </string>
    <string name="shop_btn_look_more">查看全部</string>
    <string name="to_shrink_hint">收起</string>
    <string name="to_expand_hint">展开</string>
</resources>
